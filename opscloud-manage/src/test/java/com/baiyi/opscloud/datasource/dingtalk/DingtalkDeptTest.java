package com.baiyi.opscloud.datasource.dingtalk;

import com.baiyi.opscloud.common.datasource.DingtalkConfig;
import com.baiyi.opscloud.datasource.dingtalk.base.BaseDingtalkTest;
import com.baiyi.opscloud.datasource.dingtalk.driver.DingtalkDepartmentDriver;
import com.baiyi.opscloud.datasource.dingtalk.entity.DingtalkDepartment;
import com.baiyi.opscloud.datasource.dingtalk.param.DingtalkDepartmentParam;
import com.google.common.collect.Sets;
import org.junit.jupiter.api.Test;
import org.springframework.util.CollectionUtils;

import jakarta.annotation.Resource;
import java.util.Set;

/**
 * @Author baiyi
 * @Date 2021/11/29 6:11 下午
 * @Version 1.0
 */
public class DingtalkDeptTest extends BaseDingtalkTest {

    @Resource
    private DingtalkDepartmentDriver dingtalkDepartmentDrive;

    @Test
    void listSubIdTest() {
        DingtalkDepartmentParam.ListSubDepartmentId listSubDepartmentId = DingtalkDepartmentParam.ListSubDepartmentId.builder().build();
        DingtalkDepartment.DepartmentSubIdResponse departmentSubIdResponse = dingtalkDepartmentDrive.listSubId(getConfig().getDingtalk(), listSubDepartmentId);
        print(departmentSubIdResponse);
    }

    /**
     * 遍历查询所有部门列表
     */
    @Test
    void listAllSubIdTest() {
        Set<Long> subIdSet = Sets.newHashSet();
        Set<Long> queryDeptIdSet = Sets.newHashSet(1L);
        DingtalkConfig.Dingtalk dingtalk = getConfig().getDingtalk();

        while (!queryDeptIdSet.isEmpty()) {
            final Long deptId = queryDeptIdSet.iterator().next();
            DingtalkDepartmentParam.ListSubDepartmentId listSubDepartmentId = DingtalkDepartmentParam.ListSubDepartmentId.builder()
                    .deptId(deptId)
                    .build();
            queryDeptIdSet.remove(deptId);
            DingtalkDepartment.DepartmentSubIdResponse departmentSubIdResponse = dingtalkDepartmentDrive.listSubId(dingtalk, listSubDepartmentId);
            if (!CollectionUtils.isEmpty(departmentSubIdResponse.getResult().getDeptIdList())) {
                subIdSet.addAll(departmentSubIdResponse.getResult().getDeptIdList());
                queryDeptIdSet.addAll(departmentSubIdResponse.getResult().getDeptIdList());
            }
            print(subIdSet);
            print(subIdSet.size());
            print("----------");
        }
        print(subIdSet);
        // [55068026,55395049,59235168,114378137,55030046,55465031,55118035,55088038,59421288,59353213,555152978,59432221,83122179,555894133,362022236,112205690,549230998,555149964,401833427,402022231,401892478,401750601,401851519,502846201,111698797,56617095,498633731,56730111,111251103,134089153,123903507,83655208,83655209,83655210,83655211,67542788,67619792,455523918,73323508,562840198,423806793,67575722,67597911,55411276,527031691,55471261,67572929,67596576,541571456,102421074,473673042,185522004,55457205,417399228,67596897,555702376,67777040,112253578,112288699,67545994,556009003,453135241,112254653,67798005,112408716,67708395,67790025,67739197,67749101,555873142,547386441,504495514,67556986,361986179,555057974,555039953,393926060,555329984,362347186,555159866,555181946,555187879,555352986,555834247,555896089,555281831,555357925,436243137,436045230,555352985,555719339,555230992,549307060,558020121,555345927,493451043,493518023,502499735,502933087,502626494,502426925,145848672,145872448,434532707,434320778,546956701,547172537,133912924,485993968,55266403,542345946,541964897,486247702,541816774,490677360,541948738,55243448,485971874,541677788,541719711,541977690,55277331,542175563,541946705,541697876,485948969,479506421,479502461,375404522,552598145,478519242,414075327,479425504,479441472,479383495,372468516,559450432,479594284,478542299,502532208,502813207,502550879,503050119,499379710,201037722,370463893,559491215,370530909,200805925,422493505,555264983,494292561,493768950,290837813,291072203,566211179,291211203,566246185,290865707,378895349,353766514,73675374,496397229,73302331,133808624,541066681,73196386,73196387,434575320,77747937,55333458,423984663,423859991,424169028,486224040,486312025,565586963,566353046,485531404,133781732,566361020,353848408,67763083,67681629,547123020,551051960,55456223,55385275,396495044,55479193,396510026,55512227,486620145,555365322,504433655,67800029,556227824,67699491,102337075,67674768,67758130,541161921,542398097,541667182,541688149,496183715,496471206,496544153,495954965,357282602,563206864,124067310,503358540,102424087,390306045,486692060,55396242,417540385,120987534,67786036,416980195,416830343,452920271,453504295,452974283,128240229,87881429,87881428,128089561,434345730,434328641,145872449,145876660,145823704,472870673,134117004,133970874,486317738,486269811,295414209,134136146,294533330,295108362,294317367,73545056,92340967,92472635,92380939,92458648,92573582,457853367,542367608,542503707,541869788,541896845,541517909,542305735,542304580,541764704,542185567,542178607,486722036,486030944,486655098,541906655,541714799,542282505,541697877,542332542,542400747,486539231,73519106,486121898,73457189,73476148,128485102,73575013,134020592,485957897,73474126,486661088,486656102,486355813,486699055,542260578,542026685,92408885,294381436,92540520,554694841,542486646,541756722,542309612,479409413,479889052,479334485,559432527,560018086,479344776,479443497,479785171,479785172,560038125,479898087,559962064,479426420,479859074,479178981,439819619,439735533,439735532,440209271,569075342,568519610,568514680,414013548,552503148,551607975,568510562,569464220,433671303,479800235,479890201,504210907,504297862,553530646,504507259,569161557,479845221,568497806,504598254,479773211,479478478,502219006,413976366,501710975,568997329,501942341,479393601,529742419,546992745,479766348,529529659,548225860,470956616,548049216,529754509,502073911,502085571,502571667,502896230,67672492,291306092,416172544,114257184,566183261,565896942,565613953,566038650,566160345,566332041,566110531,67572707,114400177,290770856,566085585,565594923,565903972,490522810,566125535,565774875,566247209,565989905,566319054,67676763,67691564,81060065,86290513,67665742,494813189,494512200,67591889,67668704,439837615,81053070,67621996,125534759,67591895,67637945,67549959,493690623,67661806,67608960,81090047,120939483,67673752,155193328,67800027,67566946,80946046,494671170,434465660,434385742,134088191,134105071,133957935,134027432,486453773,486020911,486032866,486575259,324149158,294126574,294604311,295036283,294805264,294981277,94913069,94897043,479524422,479640260,479732528,479596284,479733234,479364585,560542547,560829474,479647286,479626340,479025902,479280997,479594285,479449522,479229956,479591277,479807088,479912020,479927018,479441382,542329110,568854506,568409606,568884332,568905468,569230389,569014407,479927019,479874075,479746187,501797483,502066185,501851637,568755515,502148080,568480637,458172104,540232000,560077105,559745306,560271038,502106138,502196020,479617360,479366638,479703275,560007135,538559033,470626936,471136593,471223507,558877990,529755518,529835049,529487712,502365985,502542646,67592775,67597653,289247867,67565864,73194382,73150351,291706719,67688325,357298600,357298599,483825479,473291301,472352321,295164240,295473205,295670162,502776429,509523931,433116137,433156137,529751313,529562454,529697386,529581801,529788364,529543476,529840063,290899477,291102022,289667903,529549636,529445795,529618503,529786261,529783327,529409743,529522728,529607608,529529661,529628322,558788295,529581802,529829209,289381922,289480912]
    }

}
